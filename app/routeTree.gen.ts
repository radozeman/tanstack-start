/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as appIndexImport } from './routes/(app)/index'
import { Route as authSigninIndexImport } from './routes/(auth)/signin/index'
import { Route as appEventsIndexImport } from './routes/(app)/events/index'
import { Route as appEventsEventIdImport } from './routes/(app)/events/$eventId'

// Create/Update Routes

const appIndexRoute = appIndexImport.update({
  id: '/(app)/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const authSigninIndexRoute = authSigninIndexImport.update({
  id: '/(auth)/signin/',
  path: '/signin/',
  getParentRoute: () => rootRoute,
} as any)

const appEventsIndexRoute = appEventsIndexImport.update({
  id: '/(app)/events/',
  path: '/events/',
  getParentRoute: () => rootRoute,
} as any)

const appEventsEventIdRoute = appEventsEventIdImport.update({
  id: '/(app)/events/$eventId',
  path: '/events/$eventId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/(app)/': {
      id: '/(app)/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof appIndexImport
      parentRoute: typeof rootRoute
    }
    '/(app)/events/$eventId': {
      id: '/(app)/events/$eventId'
      path: '/events/$eventId'
      fullPath: '/events/$eventId'
      preLoaderRoute: typeof appEventsEventIdImport
      parentRoute: typeof rootRoute
    }
    '/(app)/events/': {
      id: '/(app)/events/'
      path: '/events'
      fullPath: '/events'
      preLoaderRoute: typeof appEventsIndexImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/signin/': {
      id: '/(auth)/signin/'
      path: '/signin'
      fullPath: '/signin'
      preLoaderRoute: typeof authSigninIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof appIndexRoute
  '/events/$eventId': typeof appEventsEventIdRoute
  '/events': typeof appEventsIndexRoute
  '/signin': typeof authSigninIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof appIndexRoute
  '/events/$eventId': typeof appEventsEventIdRoute
  '/events': typeof appEventsIndexRoute
  '/signin': typeof authSigninIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/(app)/': typeof appIndexRoute
  '/(app)/events/$eventId': typeof appEventsEventIdRoute
  '/(app)/events/': typeof appEventsIndexRoute
  '/(auth)/signin/': typeof authSigninIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/events/$eventId' | '/events' | '/signin'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/events/$eventId' | '/events' | '/signin'
  id:
    | '__root__'
    | '/(app)/'
    | '/(app)/events/$eventId'
    | '/(app)/events/'
    | '/(auth)/signin/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  appIndexRoute: typeof appIndexRoute
  appEventsEventIdRoute: typeof appEventsEventIdRoute
  appEventsIndexRoute: typeof appEventsIndexRoute
  authSigninIndexRoute: typeof authSigninIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  appIndexRoute: appIndexRoute,
  appEventsEventIdRoute: appEventsEventIdRoute,
  appEventsIndexRoute: appEventsIndexRoute,
  authSigninIndexRoute: authSigninIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/(app)/",
        "/(app)/events/$eventId",
        "/(app)/events/",
        "/(auth)/signin/"
      ]
    },
    "/(app)/": {
      "filePath": "(app)/index.tsx"
    },
    "/(app)/events/$eventId": {
      "filePath": "(app)/events/$eventId.tsx"
    },
    "/(app)/events/": {
      "filePath": "(app)/events/index.tsx"
    },
    "/(auth)/signin/": {
      "filePath": "(auth)/signin/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
